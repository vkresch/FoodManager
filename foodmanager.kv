#:kivy 1.10.0
#:import main main
#:import Toolbar kivymd.toolbar.Toolbar
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDTextField kivymd.textfields.MDTextField
#:import MDCard kivymd.card.MDCard
#:import MDSeparator kivymd.card.MDSeparator
#:import MDDropdownMenu kivymd.menu.MDDropdownMenu
#:import MDSlider kivymd.slider.MDSlider
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import MDTab kivymd.tabs.MDTab
#:import Splitter kivy.uix.splitter.Splitter
#:import Accordion kivy.uix.accordion.Accordion
#:import AccordionItem kivy.uix.accordion.AccordionItem 
#:import RecycleView kivy.uix.recycleview.RecycleView

#:include kv/addrecipes.kv
#:include kv/history.kv
#:include kv/inputitems.kv
#:include kv/overview.kv
#:include kv/recipes.kv
#:include kv/viewitems.kv
#:include kv/welcome.kv
#:include kv/buyingitems.kv
#:include kv/about.kv

<RecipeButton>:    
    on_release: app.show_items_in_recipe(self.text)

<RecipeWeightButton>:
    on_release: app.show_item_weight_recipe(self.text)

<UsedHomeWeightButton>:
    on_release: app.show_item_weight_used_home(self.text)

<CartWeightButton>:
    on_release: app.show_cartitem_weight_used_home(self.text)

<SelectableItemLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableAddItemToRecipeLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableRecipeLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size
        
        

<SelectableRecipeAtHomeLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableItemAtHomeLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableRecipeAddCartLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableItemAddCartLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableCartViewLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableInCartItemLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableStagedItemLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

<SelectableRecipeItemLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 0)
        Rectangle:
            pos: self.pos
            size: self.size

NavigationLayout:
    id: nav_layout
    MDNavigationDrawer:
        id: nav_drawer
        NavigationDrawerToolbar:
            title: "Navigation"

        NavigationDrawerIconButton:
            icon: 'menu'
            text: "Welcome"
            on_release: 
                app.root.ids.scr_mngr.current = 'welcome'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'home-variant'
            text: "Overview"
            on_release: 
                app.root.ids.scr_mngr.current = 'overview'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'food'
            text: "Items"
            on_release: 
                app.root.ids.scr_mngr.current = 'viewitems'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'food-variant'
            text: "Recipes"
            on_release: 
                app.root.ids.scr_mngr.current = 'recipes'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'cart'
            text: "Buying Items"
            on_release: 
                app.root.ids.scr_mngr.current = 'buyingitems'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'history'
            text: "History"
            on_release: 
                app.root.ids.scr_mngr.current = 'history'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

        NavigationDrawerIconButton:
            icon: 'comment-question-outline'
            text: "About"
            on_release: 
                app.root.ids.scr_mngr.current = 'about'
                app.root.ids.scr_mngr.transition.direction='left'
                app.refresh_all()

    BoxLayout:
        orientation: 'vertical'
        Toolbar:
            id: toolbar
            title: 'Food Manager'
            md_bg_color: app.theme_cls.primary_color
            background_palette: 'Primary'
            background_hue: '500'
            left_action_items: [['menu', lambda x: app.root.toggle_nav_drawer()]]
            # right_action_items: [['dots-vertical', lambda x: MDDropdownMenu(items=app.menu_items, width_mult=5).open(self)]]
        
        ScreenManager:
            id: scr_mngr
            WelcomeScreen:
                name: 'welcome'
                id: welcome_screen

            OverViewScreen:
                name: 'overview'
                id: overview_screen                   

            ViewItemsScreen:
                name: 'viewitems'             
                id: viewitems_screen

            InputItemsScreen:
                name: 'input'
                id: inputitems_screen

            RecipesScreen:
                name: 'recipes'
                id: recipes_screen

            AddRecipesScreen:
                name: 'addrecipes'
                id: addrecipes_screen
            
            BuyingItemsScreen:
                name: 'buyingitems'
                id: buyingitems_screen

            HistoryScreen:
                name: 'history'
                id: history_screen

            AboutScreen:
                name: 'about'
                id: about_screen          
                